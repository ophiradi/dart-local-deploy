flask:
    dart_host: 0.0.0.0
    dart_port: 5000
    DEBUG: true
    SQLALCHEMY_DATABASE_URI: postgresql://dart:dartis4datamarts@postgres:5432/dart
    SQLALCHEMY_POOL_SIZE: 15
    SQLALCHEMY_ECHO: false


dart:
    env_name: local
    region: region
    aws_account: '111111111111'
    queue_prefix: xxx-yyy-
    ecs_agent_data_path:
    s3_datastores_root: s3://your-config/datastores/local
    engine_taskrunner_ecs_cluster:
    engine_task_definition_max_total_memory_mb: 4000
    use_local_engines: true
    kms_key_admin_arns:
      - arn:aws:iam::111111111111:user/unknown-report
    kms_key_user_arns:
      - arn:aws:iam::111111111111:user/unknown-report
    ecr_authorized_user_arns:
      - arn:aws:iam::111111111111:user/unknown-report

    app_context:
      - name: secrets
        path: dart.service.secrets.Secrets
        options:
            kms_key_arn: arn:aws:kms:region:111111111111:key/0000000-0000-0000-0000-0000000
            secrets_s3_path: s3://your-config/secrets/local

      - name: message_service
        path: dart.service.message.MessageService
        options:
            ecs_task_status_override: passthrough

      - name: trigger_broker
        path: dart.message.broker.SqsJsonMessageBroker
        options:
            queue_name: xxx-yyy-trigger-worker-local
            aws_access_key_id: x
            aws_secret_access_key: x
            region: elasticmq
            endpoint: elasticmq
            is_secure: false
            port: 9324
            incoming_message_class: boto.sqs.message.RawMessage

      - name: subscription_broker
        path: dart.message.broker.SqsJsonMessageBroker
        options:
            queue_name: xxx-yyy-subscription-worker-local
            aws_access_key_id: x
            aws_secret_access_key: x
            region: elasticmq
            endpoint: elasticmq
            is_secure: false
            port: 9324
            incoming_message_class: boto.sqs.message.RawMessage


triggers:
    scheduled:
        cloudwatch_scheduled_events_sns_arn:


engines:
    no_op_engine:
        config: s3://your-config/dart-local.yaml
        docker_image: 111111111111.wwww/xxx/dart-engine-no_op:2.0.0
        path: dart.engine.no_op.no_op.NoOpEngine
        options:
            region: region
            dart_host: web
            dart_port: 5000
            dart_api_version: 1

    emr_engine:
        config: s3://your-config/dart-local.yaml
        docker_image: 111111111111.wwww/xxx/dart-engine-emr:2.2.0
        path: dart.engine.emr.emr.EmrEngine
        options:
            ec2_keyname: xxx-yyy-ec2-key-pair-rpt
            instance_profile: xxx-yyy-iam-rpt-1-UdsEc2InstanceProfile-1SIA38TXQ7OY1
            service_role: xxx-yyy-iam-rpt-1-UdsInstanceProfileRole-FX98BLTMCK60
            region: region
            cluster_availability_zone: regionb
            core_node_limit: 30
            impala_docker_repo_base_url: 111111111111.wwww/xxx
            impala_version: 2.3.0
            cluster_tags:
                Name: xxx-yyy-uds
                Product: xxx
                Function: a-b
                Accounting: 222-1111111
            dart_host: web
            dart_port: 5000
            dart_api_version: 1

    dynamodb_engine:
        config: ../dart-config/dart-local.yaml
        docker_image: 111111111111.wwww/xxx/dart-engine-dynamodb:1.1.0
        path: dart.engine.dynamodb.dynamodb.DynamoDBEngine
        options:
            emr_ec2_keyname: xxx-yyy-ec2-key-pair-rpt
            emr_instance_profile: xxx-yyy-iam-rpt-1-UdsEc2InstanceProfile-1SIA38TXQ7OY1
            emr_service_role: xxx-yyy-iam-rpt-1-UdsInstanceProfileRole-FX98BLTMCK60
            emr_region: region
            emr_cluster_availability_zone: regionb
            emr_core_node_limit: 30
            emr_impala_docker_repo_base_url: 111111111111.wwww/xxx
            emr_impala_version: 2.3.0
            emr_cluster_tags:
                Name: xxx-yyy-uds
                Product: xxx
                Function: dar-uds
                Accounting: 230-620600
            dart_host: web
            dart_port: 5000
            dart_api_version: 1

    redshift_engine:
        config: s3://your-config/dart-local.yaml
        docker_image: 111111111111.wwww/xxx/dart-engine-redshift:3.2.1
        path: dart.engine.redshift.redshift.RedshiftEngine
        options:
            kms_key_arn: arn:aws:kms:region:111111111111:key/0000000-0000-0000-0000-0000000
            secrets_s3_path: s3://your-config/secrets/local
            vpc_subnet: rptprd-subnetgroup
            security_group_ids: [sg-da1233be]
            region: region
            availability_zones: [regionb, regionc]
            publicly_accessible: true
            cluster_tags:
                - Key: Name
                  Value: xxx-yyy-uds
                - Key: Product
                  Value: xxx
                - Key: Function
                  Value: dar-uds
                - Key: Accounting
                  Value: 222-111111
            dart_host: web
            dart_port: 5000
            dart_api_version: 1

    s3_engine:
        config: s3://your-config/dart-local.yaml
        docker_image: 111111111111.wwww/xxx/dart-engine-s3:1.1.2
        path: dart.engine.s3.s3.S3Engine
        options:
            region: region
            dart_host: web
            dart_port: 5000
            dart_api_version: 1


local_setup:
    postgres_user: dart
    postgres_password: dartis4datamarts
    postgres_docker_image: postgres:9.4.1
    elasticmq_docker_image: 111111111111.wwww/xxx/dart-elasticmq:0.0.0


ecr:
    policy_template: aws/ecr/ecr-policy-template.json
    repo_prefix: dart
    repo_names:
        - cloudwatchlogs
        - elasticmq
        - engine-no_op
        - engine-emr
        - engine-redshift
        - engine-worker
        - flask
        - nginx
        - subscription-worker
        - trigger-worker
        - impala-state-store
        - impala-catalog
        - impala-server


kms:
    key_arn: arn:aws:kms:www:111111111111:key/0000000-0000-0000-0000-0000000
    key_policy_template: aws/kms/key-policy-template.json


s3:
    config_bucket: your-config
    data_bucket: xxx-yyy-data


sqs:
    queue_names:
        trigger_queue: xxx-yyy-trigger-worker-local
        subscription_queue: xxx-yyy-subscription-worker-local

email:
    mailer:
        host: smtp.gmail.com
        port: 587
        usr: not-set
        pwd: not-set
        use_tls: true
        use_ssl: false
    suppress_send: true
    from: aus-eng-data-warehouse-job-alerts@rmn.com
    cc_on_error: aus-eng-data-warehouse-job-alerts@rmn.com


logging:
    version: 1
    formatters:
        verbose:
            format: !env 'role="${DART_ROLE}", timestamp="%(asctime)s", category="%(levelname)s", call="%(name)s", details="%(message)s"'
    handlers:
        console:
            class: logging.StreamHandler
            formatter: verbose
            level: INFO
            stream: ext://sys.stdout
    loggers:
        __main__:
            level: INFO
            handlers: [console]
            propagate: 0
        dart:
            level: INFO
            handlers: [console]
            propagate: 0
        sqlalchemy.engine:
            level: INFO
            handlers: [console]
            propagate: 0
    root:
        level: INFO
        handlers: [console]